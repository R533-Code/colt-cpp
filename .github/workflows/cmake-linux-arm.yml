name: "Linux: GCC on ARM64 "

on:
  push:
    branches: [ "main" ]
    paths:
      - '**/*.cpp'
      - '**/*.h'
      - '**/CMakeLists.txt'
      - '**/*.yml'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit
    # clone --recursive
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive
    
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          qemu-user-static \
          binfmt-support
        wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        tar xvf arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        echo "$GITHUB_WORKSPACE/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu/bin" >> $GITHUB_PATH
        echo "$GITHUB_WORKSPACE/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu/aarch64-none-linux-gnu/libc" >> $GITHUB_PATH
        echo "CC=$GITHUB_WORKSPACE/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-gcc" >> $GITHUB_ENV
        echo "CXX=$GITHUB_WORKSPACE/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-g++" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        mkdir build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../resources/toolchain-arm64.cmake ..

    - name: Build
      run: |
        cd build
        make -j$(nproc)

    - name: Run tests with NEON
      run: |
        cd build
        qemu-aarch64-static -L "$GITHUB_WORKSPACE/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu/aarch64-none-linux-gnu/libc" ./coltcpp_tests